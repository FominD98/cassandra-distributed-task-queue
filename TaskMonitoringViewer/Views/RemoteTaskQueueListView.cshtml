@using SKBKontur.Catalogue.RemoteTaskQueue.TaskMonitoringViewer.Models
@using SKBKontur.Catalogue.RemoteTaskQueue.TaskMonitoringViewer.RenderingHelpers
@model RemoteTaskQueueModel
@{
    Layout = "TaskMonitoringLayout.cshtml";
}

@* ReSharper disable Razor.SectionNotResolved *@
@section Title {
    Task list
}
@* ReSharper restore Razor.SectionNotResolved *@

<h1>Task list</h1>

<table>
    <tr>
        <td>TaskId</td>
        <td>TaskState</td>
        <td>TaskName</td>
        <td>EnqueueTicks</td>
        <td>StartExecutedTicks</td>
        <td>MinimalStartTicks</td>
        <td>Attempts</td>        
        <td>ParentTaskId</td>        
    </tr>
    @{
        for (int index = 0; index < Model.TaskModels.Length; index++)
        {
            var taskModel = Model.TaskModels[index];
            // ReSharper disable Asp.NotResolved
            var detailsTaskUrl = @Url.Action("Show", "RemoteTaskQueue", new { id = taskModel.Id });
            var detailsParentTaskUrl = @Url.Action("Show", "RemoteTaskQueue", new { id = taskModel.ParentTaskId });
            // ReSharper restore Asp.NotResolved
            <tr id="Task[@index]">
                <td id="TaskId[@index]"><a href="@detailsTaskUrl">@taskModel.Id</a></td>
                <td id="TaskState[@index]">@Html.TaskState(taskModel)</td>
                <td id="TaskName[@index]">@taskModel.Name</td>
                <td id="EnqueueTicks[@index]">@taskModel.EnqueueTicks</td>
                <td id="StartExecutedTicks[@index]">@taskModel.StartExecutedTicks</td>
                <td id="MinimalStartTicks[@index]">@taskModel.MinimalStartTicks</td>
                <td id="Attempts[@index]">@taskModel.Attempts</td>
                <td id="ParentTaskId[@index]"><a href="@detailsParentTaskUrl">@taskModel.ParentTaskId</a></td>
            </tr>
        }
    }
</table>
@Html.Paginator(Model)
