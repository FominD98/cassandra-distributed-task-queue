@using System
@using System.Web
@using SKBKontur.Catalogue.Objects
@using SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers
@using SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers.Controllers.ObjectTreeViewBuilding
@using SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers.Controllers.ObjectTreeViewBuilding.Rendering
@model SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers.Models.TaskDetailsModel
@{
    Layout = "../_TasksLayout.cshtml";
}
@section Title { Таска }

@helper PrintTime(DateTime? dateTime)
{
    if(dateTime.HasValue)
    {
        @dateTime.ToFullMoscowTimeString()
        @(" (МСК) ")
        @("(")@dateTime.Value.Ticks@(")")
    }
    else
    {
        @("-")
    }
}


@helper DrawObjectTreeNode(ObjectTreeModel objectModel, ObjectTreeModelRenderContext context, int? parentIndex)
{
    context.IncrementGlobalIndex();
    var currentIndex = context.GlobalIndex;
    <tr class="treegrid-@currentIndex @(parentIndex.HasValue ? ("treegrid-parent-" + parentIndex) : "")">
        <td>@objectModel.Name</td>
        <td>
            @if (objectModel.Value != null)
            {
                if (@objectModel.Value.IsHtml)
                {
                    @Html.Raw(objectModel.Value.Value)
                }
                else
                {
                    @objectModel.Value.Value
                }

            }
        </td>
    </tr>
    foreach(var child in objectModel.Children)
    {
        @DrawObjectTreeNode(child, context, currentIndex)
    }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="page-header">
                <h1>
                    Задача @Model.TaskName
                    <small style="font-size: 14px;">
                        <a id="backLink" href="#">вернуться к поиску</a>
                         <script>
                             document.getElementById("backLink").addEventListener("mousedown", function() {
                                if(history.length === 1){
                                    window.location = @Html.Raw(HttpUtility.JavaScriptStringEncode(@Html.ViewContext.HttpContext.Request.UrlReferrer.Return(x => x.ToString(), Url.Action("Run")), true));
                                } else {
                                    window.history.back();
                                }                                
                            }, false);
                        </script>
                    </small>
                </h1>
                <p class="lead">
                    ID: @Model.TaskId
                    @if(Model.AllowControlTaskExecution)
                    {
                        <div class="btn-group" role="group">
                            @if(Model.State.CanCancelTask())
                            {
                                <button data-url="@Url.Action("Cancel", new {id = Model.TaskId})" class="btn btn-danger cancel-task-button">Cancel</button>
                            }
                            @if(Model.State.CanRerunTask())
                            {
                                <button data-url="@Url.Action("Rerun", new {id = Model.TaskId})" class="btn btn-success rerun-task-button">Rerun</button>
                            }
                        </div>
                    }
                </p>
            </div>
        </div>
    </div>
    
    <div class="row spa">
        <div class="col-md-8">
            <table class="table table-bordered table-hover tree">
                <tr class="treegrid-1">
                    <td>TaskId</td>
                    <td>@Model.TaskId</td>
                </tr>
                <tr class="treegrid-2">
                    <td>TaskState</td>
                    <td>@Model.State</td>
                </tr>
                <tr class="treegrid-3">
                    <td>Name</td>
                    <td>@Model.TaskName</td>
                </tr>
                <tr class="treegrid-4">
                    <td>EnqueueTime</td>
                    <td>@PrintTime(Model.EnqueueTime)</td>
                </tr>
                <tr class="treegrid-5">
                    <td>StartExecutedTime</td>
                    <td>@PrintTime(Model.StartExecutedTime)</td>
                </tr>
                <tr class="treegrid-6">
                    <td>FinishExecutedTime</td>
                    <td>@PrintTime(Model.FinishExecutedTime)</td>
                </tr>
                <tr class="treegrid-7">
                    <td>MinimalStartTime</td>
                    <td>@PrintTime(Model.MinimalStartTime)</td>
                </tr>
                <tr class="treegrid-8">
                    <td>Attempts</td>
                    <td>@Model.AttemptCount</td>
                </tr>
                <tr class="treegrid-9">
                    <td>ParentTaskId</td>
                    <td>
                        @if(!string.IsNullOrWhiteSpace(Model.ParentTaskId))
                        {
                            @Html.ActionLink(Model.ParentTaskId, "Details", new {id = Model.ParentTaskId})
                        }                        
                    </td>
                </tr>
                <tr class="treegrid-1">
                    <td>ChildTaskIds</td>
                    <td>
                        @foreach(var childTaskId in Model.ChildTaskIds.ReturnArray())
                        {
                            @Html.ActionLink(childTaskId, "Details", new {id = childTaskId})
                        }                        
                    </td>
                </tr>
                @{
                    var context = new ObjectTreeModelRenderContext(100);
                }
                @if (Model.DetailsTree != null)
                {
                    @DrawObjectTreeNode(Model.DetailsTree, context, null)
                }
            </table>            
        </div>
    </div>
    @foreach (var exceptionInfo in Model.ExceptionInfos)
    {
        <div class="row spa">
            <div class="col-md-8">
                <pre>@exceptionInfo</pre>
            </div>
        </div>
    }
</div>


<script type="text/javascript">
    $(document).ready(function() {
        $('.tree').treegrid();
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

@section Scripts
{
    @Html.MagicStyle("~/Views/Statics/Styles/jquery.treegrid.css")
    @Html.MagicScript("~/Views/Statics/Scripts/jquery.treegrid.js")
    @Html.MagicScript("~/Views/Statics/Scripts/jquery.treegrid.bootstrap3.js")
}