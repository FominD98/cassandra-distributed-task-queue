@using RemoteQueue.Cassandra.Entities
@using SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers
@using SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers.Models
@model SKBKontur.Catalogue.RemoteTaskQueue.ElasticMonitoring.MvcControllers.Models.TasksResultModel

@functions {

    private string GetTaskRowColor(TaskModel task)
    {
        if(task.State == TaskState.New)
            return "";
        if (task.State == TaskState.Finished)
            return "success";
        if(task.State == TaskState.WaitingForRerun || task.State == TaskState.InProcess || task.State == TaskState.WaitingForRerunAfterError)
            return "active";
        if (task.State == TaskState.Unknown || task.State == TaskState.Fatal || task.State == TaskState.Canceled)
            return "danger";
        return "danger";
    }

}
@{
    Layout = "../_TasksLayout.cshtml";
}
@section Title { Задачи }

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="page-header">
                <h1>
                    Список задач
                    <small style="font-size: 14px;">
                        <a href="@Model.SearchConditions.AdminToolAction">вернуться к инструментам администратора</a>
                    </small>
                </h1>
            </div>
            
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            @Html.Partial("SearchPanel", Model.SearchConditions)            
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" style="padding-top: 5px;">
            <a data-target="#search-help-modal" data-toggle="modal"  href="#">Что ещё можно ввести в строку поиска...</a>
            @Html.Partial("HelpModal")
        </div>
    </div>

    <div class="row" style="margin-top: 40px;">
        <div class="col-md-12">
            Всего найдено: @Model.Results.TotalResultCount
        </div>
        @if (Model.EnableBatchTasksActions)
        {
            var queryString = Url.RequestContext.HttpContext.Request.QueryString.ToString();
            <div class="col-md-12">
                <button data-firsturl="@Url.Action("StartCancelTasks")?@queryString" data-nexturl="@Url.Action("ContinueCancelTasks")" class="btn btn-xs btn-danger cancel-all-tasks-button">Cancel All</button>
            </div>
            <div class="col-md-12">
                <button data-firsturl="@Url.Action("StartRerunTasks")?@queryString" data-nexturl="@Url.Action("ContinueRerunTasks")" class="btn btn-xs btn-success rerun-all-tasks-button">Rerun All</button>
            </div>
        }
    </div>
    

    <div class="row">
        <div class="col-md-12">
            <table class="table table-bordered table-hover" style="margin-top: 40px;">
                <thead>
                    <tr>
                        <th>Task Id</th>
                        <th>Task State</th>
                        <th>Task Name</th>
                        <th>Enqueue time (МСК)</th>
                        <th>StartExecutingTime time (МСК)</th>
                        <th>FinishExecutingTime time (МСК)</th>
                        <th>MinimalStartTime time (МСК) <span class="glyphicon glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span></th>
                        <th>ExpirationTime time (МСК)</th>
                        <th>Attempts</th>
                        <th>ParentTaskId</th>
                    </tr>
                </thead>
                <tbody id="result-container">
                    @foreach(var task in Model.Results.Tasks)
                    {
                        <tr class="@GetTaskRowColor(task)">
                            <td>
                                @if(Model.Results.AllowViewTaskData)
                                {
                                    @Html.ActionLink(@task.Id, "Details", new { id = task.Id })
                                }
                                else
                                {
                                    @task.Id
                                }                                
                                @if (Model.Results.AllowControlTaskExecution)
                                {
                                    <div class="btn-group pull-right" role="group">
                                        @if (task.State.CanCancelTask())
                                        {
                                            <button data-url="@Url.Action("Cancel", new {id = task.Id})" class="btn btn-xs btn-danger cancel-task-button">Cancel</button>
                                        }
                                        @if (task.State.CanRerunTask())
                                        {
                                            <button data-url="@Url.Action("Rerun", new { id = task.Id })" class="btn btn-xs btn-success rerun-task-button">Rerun</button>
                                        }
                                    </div>
                                }
                            </td>                        
                            <td>@task.State</td>            
                            <td>@task.Name</td>            
                            <td>@task.EnqueueTime.ToFullMoscowTimeString()</td>            
                            <td>@task.StartExecutionTime.ToFullMoscowTimeString()</td>
                            <td>@task.FinishExecutionTime.ToFullMoscowTimeString()</td>            
                            <td>@task.MinimalStartTime.ToFullMoscowTimeString()</td>            
                            <td>@task.ExpirationTime.ToFullMoscowTimeString()</td>
                            <td>@task.AttemptCount</td>            
                            <td>@task.ParentTaskId</td>            
                        </tr>
                    }
                </tbody>
            </table>        
            
            <button class="btn btn-default btn-lg center-block" id="load-more" style="min-width: 200px; margin-bottom: 50px;">Ещё</button>

            <script>
                var lastIteratorContext = "@Model.Results.IteratorContext";
            </script>
        </div>
    </div>

    @if(Model.EnableBatchTasksActions)
    {
        <div>
            @Html.Partial("_LongActionsBasicDialog")
        </div>
    }
</div>
